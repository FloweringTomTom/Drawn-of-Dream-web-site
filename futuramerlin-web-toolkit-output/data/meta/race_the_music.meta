a:2:{s:7:"current";a:9:{s:4:"date";a:2:{s:7:"created";i:1381777159;s:8:"modified";i:1382158161;}s:7:"creator";s:5:"admin";s:4:"user";s:5:"admin";s:11:"last_change";a:7:{s:4:"date";i:1382158161;s:2:"ip";s:14:"130.111.242.40";s:4:"type";s:1:"E";s:2:"id";s:14:"race_the_music";s:4:"user";s:5:"admin";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:5:"admin";s:5:"admin";}s:5:"title";s:31:"Implementation tasks and status";s:11:"description";a:2:{s:15:"tableofcontents";a:18:{i:0;a:4:{s:3:"hid";s:31:"implementation_tasks_and_status";s:5:"title";s:31:"Implementation tasks and status";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:1;a:4:{s:3:"hid";s:25:"design_and_implementation";s:5:"title";s:25:"Design and implementation";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:2;a:4:{s:3:"hid";s:12:"introduction";s:5:"title";s:12:"Introduction";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:3;a:4:{s:3:"hid";s:20:"overview_of_the_game";s:5:"title";s:20:"Overview of the game";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:4;a:4:{s:3:"hid";s:14:"user_interface";s:5:"title";s:14:"User interface";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:5;a:4:{s:3:"hid";s:12:"architecture";s:5:"title";s:12:"Architecture";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:6;a:4:{s:3:"hid";s:26:"the_game_s_logic_structure";s:5:"title";s:26:"The game's logic structure";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:7;a:4:{s:3:"hid";s:10:"components";s:5:"title";s:10:"Components";s:4:"type";s:2:"ul";s:5:"level";i:3;}i:8;a:4:{s:3:"hid";s:15:"scope_of_effort";s:5:"title";s:15:"Scope of effort";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:9;a:4:{s:3:"hid";s:32:"implementation_plan_and_timeline";s:5:"title";s:32:"Implementation plan and timeline";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:10;a:4:{s:3:"hid";s:14:"resources_used";s:5:"title";s:14:"Resources used";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:11;a:4:{s:3:"hid";s:18:"concluding_remarks";s:5:"title";s:18:"Concluding remarks";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:12;a:4:{s:3:"hid";s:7:"testing";s:5:"title";s:7:"Testing";s:4:"type";s:2:"ul";s:5:"level";i:1;}i:13;a:4:{s:3:"hid";s:18:"sources_of_failure";s:5:"title";s:18:"Sources of failure";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:14;a:4:{s:3:"hid";s:19:"modules_and_testing";s:5:"title";s:19:"Modules and testing";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:15;a:4:{s:3:"hid";s:17:"top_level_testing";s:5:"title";s:17:"Top level testing";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:16;a:4:{s:3:"hid";s:33:"implementation_plan_and_timeline1";s:5:"title";s:32:"Implementation plan and timeline";s:4:"type";s:2:"ul";s:5:"level";i:2;}i:17;a:4:{s:3:"hid";s:34:"race_the_music_and_fracture_active";s:5:"title";s:37:"RACE THE °MUSIC and Fracture//Active";s:4:"type";s:2:"ul";s:5:"level";i:2;}}s:8:"abstract";s:504:"RACE THE °MUSIC is a computer game.

	*  Implement keyed data storage in DCE standard
	*  Implement keyed data storage in dceutils
	*  Make necessary enhancements (including dceutils interface and a storage system) to Fracture//Active
	*  Implement Fracture//Active Python bindings
	*  Create dummy modules
	*  Begin game module development:
		*  Fracture//Active resource storage interface: make sends and requests; cache resources locally.
		*  Fracture//Active DCE data parser interface: make requ…";}s:8:"relation";a:3:{s:10:"references";a:3:{s:3:"dce";b:1;s:8:"dceutils";b:1;s:15:"fracture_active";b:1;}s:5:"media";a:2:{s:71:"designdocument-v3-10oct2013-convertedtohtml-14sept2013_html_20d38fc.png";b:1;s:72:"designdocument-v3-10oct2013-convertedtohtml-14sept2013_html_d04376a5.png";b:1;}s:10:"firstimage";s:71:"designdocument-v3-10oct2013-convertedtohtml-14sept2013_html_20d38fc.png";}s:8:"internal";a:2:{s:5:"cache";b:1;s:3:"toc";b:1;}}s:10:"persistent";a:5:{s:4:"date";a:2:{s:7:"created";i:1381777159;s:8:"modified";i:1382158161;}s:7:"creator";s:5:"admin";s:4:"user";s:5:"admin";s:11:"last_change";a:7:{s:4:"date";i:1382158161;s:2:"ip";s:14:"130.111.242.40";s:4:"type";s:1:"E";s:2:"id";s:14:"race_the_music";s:4:"user";s:5:"admin";s:3:"sum";s:0:"";s:5:"extra";s:0:"";}s:11:"contributor";a:1:{s:5:"admin";s:5:"admin";}}}