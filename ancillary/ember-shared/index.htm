<h1 class="title">ember-shared</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/ancillary/ready-to-use.htm">Software</a></span>
</p>

<h2>Overview</h2>
<p>Code shared between various Ember software.</p>
<h2>Documentation</h2>
<h3>Usage</h3>
<p>ember-shared provides the following command-line scripts, mainly useful for writing other scripts.</p>
<dl>
    <dt><code>date-uuid</code></dt><dd>Returns a timestamp combined with a random (V4) UUID. Synopsis: <code>date-uuid</code></dd>
    <dt><code>disk-size-in-bytes</code></dt><dd>Returns an estimate sum of the disk usage of the specified files, in bytes. Synopsis: <code>disk-size-in-bytes &lt;file&gt;...</code></dd>
    <dt><code>error-notify</code></dt><dd>Notify the user of a shell script of an error condition. Synopsis: <code>error-notify [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise error-notify exits with status 1)</dd>
    <dt><code>warn</code></dt><dd>Notify the user of a shell script of a warning. Synopsis: <code>warn &lt;message-to-user&gt;</code></dd>
    <dt><code>warn-timeout</code></dt><dd>Notify the user of a shell script of a warning, and wait a bit in the hope that they see the warning. Synopsis: <code>warn &lt;message-to-user&gt; [time-to-wait-in-seconds]</code> (time-to-wait defaults to 10 seconds)</dd>
</dl>
<p>In addition, ember-shared also provides the following scripts that it uses internally that are not supported for independent use.</p>
<dl>
    <dt><code>ember_bash_setup</code></dt><dd>Set up the bash environment shared by various Ember projects. Synopsis: <code>source ember_bash_setup</code></dd>
    <dt><code>die</code></dt><dd>Tells the user that their bash environment is misconfigured (this script should never run if everything is working). Synopsis: <code>die [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise die exits with status 1)</code></dd>
</dl>
<p><code>ember_bash_setup</code> provides these bash functions.</p>
<dl>
    <dt><code>die</code></dt><dd>Notify the user of a shell script of an error condition, and exit. Synopsis: <code>die [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise the script exits with status 1)</dd>
    <dt><code>embasename</code></dt><dd>Replacement for <code>basename</code> in bash. Synopsis: <code>embasename &lt;path&gt;</code></dd>
    <dt><code>emreadlink</code></dt><dd>Cross-platform replacement for <code>readlink</code>. Synopsis: <code>emreadlink &lt;path&gt;</code></dd>
    <dt><code>ia</code></dt><dd>Wrapper around the <code>ia</code> tool for communicating with the Internet Archive, which can be used as a drop-in replacement for the standard <code>ia</code> command. Synopsis: <code>ia [argument]...</code></dd>
    <dt><code>setVariableToCommandOutput</code></dt><dd>Alternative to bash command substitution (<code>"$(command)"</code>) that preserves trailing newlines. <code>variable-name</code> must not be "<code>emSetVariableToCommandOutputVar</code>". Synopsis: <code>setVariableToCommandOutput &lt;variable-name&gt; &lt;command&gt; [argument]...</code></dd>
    <dt><code>ereplace</code></dt><dd>Replace one string with another in the specified file. Synopsis: <code>ereplace &lt;string-to-replace&gt; &lt;replacement-string&gt; &lt;file&gt;</code></dd>
    <dt><code>print</code></dt><dd>Prints a string. Synopsis: <code>print &lt;string&gt;</code></dd>
    <dt><code>readconf</code></dt><dd>Read a value from a configuration file, and return it as <code>readconfValue</code> (this is an array, and will contain multiple results if the key is present multiple times in the file). If <code>&lt;key&gt;</code> is not provided, it will return the non-comment lines of the file instead. Synopsis: <code>readconf [&lt;key&gt;] &lt;file&gt;</code></dd>
    <dt><code>preadconf</code></dt><dd>Read a value from a configuration file, and print it (if the key is present multiple times in the file, the first value will be printed). Synopsis: <code>preadconf &lt;key&gt; &lt;file&gt;</code></dd>
</dl>

<h3>Installation</h3>
<p>For Wreathe 7.3, an ebuild (<code>app-misc/ember-shared</code>) is available in the <a href="/ancillary/wreathe">Wreathe</a> overlay (this may also work for similar operating systems such as Ututo XS GNU/Linux).</p>
<p>For other operating systems, use the following installation instructions.</p>

<h4>Instructions for installation without ebuild</h4>

<h5>Requirements</h5>
<ul>
  <li>A recent version of bash</li>
</ul>
<h5>Optional requirements</h5>
<p>For the <code>ia</code> command, the following additional requirements apply.
<ul>
    <li>An account at the non-profit <a href="https://archive.org/">Internet Archive</a></li>
    <li>ia (<a href="https://pypi.python.org/pypi/internetarchive">https://pypi.python.org/pypi/internetarchive</a>) 1.0.2 or later (ia must be configured by running <code>ia configure</code> since installing 1.0.2 or later before Crystallize can be used)</li>
</ul>

<h5>Download</h5>
<p>To download ember-shared, run:</p>
<pre><code>git clone https://github.com/ethus3h/ember-shared.git</code></pre>

<h5>Copy scripts</h5>
<p>To install the downloaded scripts, copy them to your preferred location.</p>

<h2>Development</h2>
<p>To learn about contributing to this project, visit <a href="../develop.htm">the development page</a>.</p>
