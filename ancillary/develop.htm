<h1>Development documentation</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/">Home</a></span>
    <span><a href="/ancillary/ready-to-use.htm">Other projects</a></span>
    <span><a href="/ancillary/work-in-progress.htm">Work-in-progress ancillary projects</a></span>
</p>

<h2>Ember development community standards</h2>

    <p>Ember has adopted <a href="code-of-conduct.htm">the Contributor Covenant Code of Conduct</a>.</p>

<h2>Issue tracker</h2>

    <p><a href="/issue-tracker">An issue tracker</a> <small>(<a href="/static/content/futuramerlin.com/issue-tracker/view_all_bug_page.php.html">static backup copy</a>)</small> is available.</p>

<h2>List of repositories</h2>
    <h3>Top-level projects</h3>
        <dl>
            <dt>ember</dt><dd>Core project repository (pulls in all other core repositories as submodules)</dd>
            <dt>ember-information-technology-environment</dt><dd><a href="/information-technology">Information technology environment</a></dd>
            <dt>ember-library</dt><dd><a href="/library">Library</a></dd>
            <dt>ember-library-2</dt><dd><a href="/library">Library</a>: Section 2 (not publicly available at this <time></time>)</dd>
            <dt>ember-web-site</dt><dd>This Web site</dd>
        </dl>

    <h3>Satellite projects</h3>
        <dl>
            <dt>BeHeMMOth</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: bullet hell MMO computer game</dd>
            <dt>compiz-extra-snowflake-textures</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: textures for use with the Compiz-Reloaded window manager</dd>
            <dt>compiz-plugins-community</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Additional plugins for the Compiz-Reloaded window manager</dd>
            <dt>compiz-reloaded-overlay</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Code used to build the Compiz-Reloaded window manager</dd>
            <dt>crystallize</dt><dd><a href="/ancillary/crystallize/">Crystallize</a></dd>
            <dt>curl-phpmyadmin</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Tool to export MySQL data from PHPMyAdmin using curl</dd>
            <dt>ember-meta</dt><dd>Ember meta-repository (pulls in all other repositories as submodules)</dd>
            <dt>ember-retired-repositories</dt><dd><a href="/ancillary/ember-retired-repositories/">Ember Retired Repositories</a>: meta-repository containing repositories and data that are no longer used by Ember</dd>
            <dt>ember-satellite-projects</dt><dd>Satellite projects meta-repository (pulls in all other satellite repositories as submodules)</dd>
            <dt>ember-shared</dt><dd>Code shared between various Ember software</dd>
            <dt>ember-web-site-snapshots</dt><dd>Snapshots of the contents of the Ember Web site, as retrieved from the server</dd>
            <dt>futuramerlin-web-toolkit</dt><dd><a href="/ancillary/futuramerlin-web-toolkit/">Futuramerlin Web Toolkit</a></dd>
            <dt>jdownloader</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: JDownloader (mirror of code to facilitate packaging)</dd>
            <dt>jorgan</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: JDownloader (forked from discontinued code)</dd>
            <dt>moon-1</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Moonlight (forked from discontinued code)</dd>
            <dt>node-spotify-downloader</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: node-spotify-downloader (forked from discontinued code)</dd>
            <dt>node-spotify-web</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: node-spotify-web (forked from discontinued code)</dd>
            <dt>unicode-reports</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Unicode reports (mirror of documents to facilitate packaging)</dd>
            <dt>warcdealer</dt><dd><a href="/ancillary/warcdealer/">Warcdealer</a></dd>
            <dt>wreathe-base</dt><dd><a href="/ancillary/wreathe/">Wreathe</a> core repository</dd>
            <dt>wreathe-backgrounds</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: background images</dd>
            <dt>wreathe-charselect</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Character selection tool (forked from kcharselect)</dd>
            <dt>wreathe-conf</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Configuration files</dd>
            <dt>wreathe-file-manager</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: File manager (forked from discontinued code)</dd>
            <dt>wreathe-icons</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Icons</dd>
            <dt>wreathe-media-resources</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Resources for media production</dd>
            <dt>wreathe-office-resources</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Resources for office work</dd>
            <dt>wreathe-overlay</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Code used to build some packages in Wreathe</dd>
            <dt>wreathe-overlays-redist</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Redistributed code used to build some packages in Wreathe</dd>
            <dt>wreathe-package-db</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Package information database (not exactly part of Wreathe; rather, this is information <em>regarding</em> Wreathe)</dd>
            <dt>wreathe-packages</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Packages (forked from discontinued code)</dd>
            <dt>wreathe-typeface-family</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Typefaces used in Wreathe</dd>
            <dt>wreathe-typefaces-redist</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Redistributed typefaces used in Wreathe</dd>
            <dt>wreathe-web-filters</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: Web filters</dd>
            <dt>xulrunner</dt><dd><a href="/ancillary/wreathe/">Wreathe</a>: XULRunner (forked from discontinued code)</dd>
        </dl>

    <h3>Personal scratch space</h3>
        <p>These repositories are personal scratch spaces used by <a href="/people/elliot">Elliot Chandler</a>. They are not officially part of Ember, but may at times contain some information of relevance to the development history of Ember. They may in the future be added to parts 2 or 3 of the Ember Library.</p>
        <dl>
            <dt>personal</dt><dd>Personal scratch space</dd>
            <dt>personal-private</dt><dd>Personal scratch space (not publicly available at this time)</dd>
        </dl>

<h2>Getting the data</h2>
    <p>This section discusses how to download the data of, and the projects maintained by, Ember. These instructions will result in the creation of a development environment for the repositories similar to the one used by Ember. If you want to use the Ember tools for working with this environment, and are not using Wreathe 7.3, then additional configuration steps should be taken after getting the data (see "Configuring the environment"). If you just want to examine the contents, or use standard Git tools with it, those steps are not necessary. If you are using Wreathe 7.3, these commands for getting the development data should either be run in the root directory, or else the existing <code>/Ember Library</code> folder should be moved to the desired loctaion, and the value of the <code>EmberLibrary</code> configuration field for Crystallize set to that new location as described in the "Configuring the environment" section below.</p>

    <h3>Getting only the basic repositories</h3>
        <p>Unless you are working on Wreathe or investigating the history of Ember, you probably don't need the Wreathe repositories or Ember history repositories, which are pretty big. This section does not discuss getting them. If you do want them, see the next section. To get these basic repositories, run the following command in the directory where you want the Ember development data to be stored.</p>

        <pre><code>declare -a emberProjects=("ember" "ember-information-technology-environment" "ember-library" "ember-web-site"); declare -a emberSatelliteProjects=("crystallize" "ember-shared" "futuramerlin-web-toolkit" "warcdealer"); set -e; mkdir -p Ember\ Library; cd Ember\ Library || exit 1; git clone --recursive https://github.com/ethus3h/ember.git Ember; cd Ember || exit 1; for i in "${emberProjects[@]}"; do git clone --recursive https://github.com/ethus3h/"$i".git; done; cd ..; mkdir Ember\ satellite\ projects; cd Ember\ satellite\ projects || exit 1; for i in "${emberSatelliteProjects[@]}"; do git clone --recursive https://github.com/ethus3h/"$i".git; done; cd ../.. || exit 1; echo "Finished downloading Ember."</code></pre><br />

    <h3>Getting all public repositories</h3>
        <p>This section discusses getting all publicly available Ember data, which is quite large. Unless you are working on Wreathe or investigating the history of Ember, you probably don't need this, and can use the previous section to get a more limited subset of data.</p>
        <p>These main instructions do not currently get the ember-library-2, personal, or personal-private repositories, the first and third because they are not currently publicly available, and the second (and third) because they are probably of limited interest. To get this more complete set of repositories, run the following command in the directory where you want the Ember development data to be stored.</p>
        <pre><code>git clone --recursive https://github.com/ethus3h/ember-meta.git Ember\ Library</code></pre><br />

        <h4>About the "ember-library-2" repository</h4>
            <p>The "ember-library-2" repository is not currently publicly available, and is weird and complicated. It is an overlay on top of the ember-meta repository. To use it, clone it and then move its .git directory to <code>Ember/ember-library/ember-library-2/.egup.git</code> (within the main <code>EmberLibrary</code> folder â€” see the section "Configuring the environment" below). From a semantic perspective, the ember-meta repository should be considered part of the ember-library-2 repository, but having a submodule with the same working directory as the current git repository is kinda weird and confusing and I'm not really sure how to do it, so I haven't done that yet.</p>

        <h4>Getting the "personal" repository (and about the "personal-private" repository)</h4>
            <p>If you really do want this, go to the folder where you ran the above command, and run: <code>cd Ember\ Library/Ember\ satellite\ projects; git clone https://github.com/ethus3h/personal.git</code>. (The "personal-private" repository works in the same manner as this, but is not currently publicly available.)</p>

    <h3>Configuring and using the environment</h3>
        <p>This step is only needed if you want to use the Ember tools to work with the development environment, and are not using Wreathe 7.3 (which has this already taken care of). If you just want to examine its contents or develop it using standard Git tools, this is not necessary.</p>
        <p>To use these tools (egup/eogup), a copy of Crystallize must be installed and configured with the <code>EmberLibrary</code> configuration field set to the location of the folder (called "Ember Library") containing the development environment. For example, if as in the Ember setup the folder is in the root directory, the Crystallize configuration file (crystallize.conf) would contain a line reading '<code>EmberLibrary,/Ember Library</code>'. Also, the scripts with names beginning with "egup" and "eogup" that are in the <code>usr/bin</code> folder of the wreathe-base repository must be executable and available in the <code>PATH</code> for your user and the root user on your system.</p>
        <p>To synchronise your changes to the development environment, run <code>egup</code>, or <code>eogup</code> if there isn't a Web connection available or GitHub is unavailable) if you have remote commit privileges. (If you do not have remote commit privileges, use a fork of the repository you want to work on, in the traditional Git manner.) To build the Ember Web site, run <code>egup-web</code>.</p>

<h2>Relevant how-to articles</h2>
    <ul>
        <li><a href="/ancillary/wreathe/documentation/experimental/get-clean-git-branch.htm">How to get a clean, up-to-date with master branch in a forked git repository</a></li>
        <li><a href="/ancillary/wreathe/documentation/experimental/find-non-source-files.htm">Finding non-source files (e.g. in a git repository)</a></li>
        <li><a href="/ancillary/wreathe/documentation/experimental/installing-offline.htm">Installing or updating a live package without an Internet connection</a></li>
    </ul>

<h2>Stream Registry repositories, and crystal backups</h2>
    <p>Five of the repositories (ember-library-2, ember-retired-repositories, personal, personal-private, and wreathe-packages) contain contents stored using the stream registry feature of Crystallize. This means that to obtain a complete copy of the Ember </p>
