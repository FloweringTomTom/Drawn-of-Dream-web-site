<h1 class="title">Crystallize</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/ancillary/ready-to-use.htm">Software</a></span>
</p>

<h2>Overview</h2>
<p>A collection of tools for working with files and filesystems.</p>
<p>Note: There is an oddity in the version numbering: version 2.15.5.9.1 was followed immediately by version 2.15.5.9.3 (skipping 2.15.5.9.2); version 2.15.5.9.2 was then released following version 2.15.5.9.3 (and is identical to version 2.15.5.9.3 aside from the version number); normal numbering then resumed with version 2.15.5.9.4, .5, .6 etc. following version 2.15.5.9.2 (skipping version 2.15.5.9.3, as that number was already used).</p>
<h2>Documentation</h2>
<h3>Usage</h3>
<p>Crystallize provides the following primary user-facing command-line scripts.</p>
<dl>
    <dt><code>crystallize</code></dt><dd>Archives a snapshot of a file and removes it, providing an address and/or a pointer file that can be used to retrieve it. Synopsis: <code>crystallize [--] [--leave-pointer] &lt;file&gt;...</code></dd>
    <dt><code>crystallize-backup</code></dt><dd>Backs up <code>crystallize</code>d files with their associated metadata to the current directory. Synopsis: <code>crystallize-backup &lt;crystal-address&gt;</code></dd>
    <dt><code>decrystallize</code></dt><dd>Retrieves files stored using <code>crystallize</code> to the current directory, given their address. Synopsis: <code>decrystallize &lt;crystal-address&gt;</code></dd>
    <dt><code>decrystallize-pointer</code></dt><dd>Retrieves files stored using <code>crystallize</code> to the current directory, given a path to their pointer file. Synopsis: <code>decrystallize-pointer &lt;file&gt;</code></dd>
</dl>
<p>The following public-facing scripts are either used internally by the other tools and are mainly useful for writing other shell scripts, or are not thoroughly tested.</p>
<dl>
    <dt><code>crystallize-getconf</code></dt><dd>Retrieve a configuration value from the configuration file used by Crystallize tools. Synopsis: <code>crystallize-getconf &lt;configuration-key-name&gt;</code></dd>
    <dt><code>disk-size-in-bytes</code></dt><dd>Returns an estimate sum of the disk usage of the specified files, in bytes. Synopsis: <code>disk-size-in-bytes &lt;file&gt;...</code></dd>
    <dt><code>error-notify</code></dt><dd>Notify the user of a shell script of an error condition. Synopsis: <code>error-notify [exit-status] [message-to-user]...</code> (if the first argument is an integer, it is used as the exit status; otherwise error-notify exits with status 1<!-- Why should the exit status of a script indicating an error ever matter?! I don't get what I was thinking when I wrote it... I can see it making sense with the error-die function, but not this... -->)</dd>
    <dt><code>fcache_init</code></dt><dd>Create an "fcache" cache directory: fcache is a naïve caching layer for non-changing URLs. Synopsis: <code>fcache_init &lt;directory-name&gt; &lt;cache-size-limit-in-bytes&gt;</code> (if the cache directory already exists, the current size limit will override the one provided as an argument)</dd>
    <dt><code>fcache_request</code></dt><dd>Get an item using the specified "fcache" cache. Synopsis: <code>fcache_request &lt;cache-directory&gt; &lt;URL&gt;</code></dd>
    <dt><code>rubberfs</code></dt><dd>Not ready for production use! Provides tools for managing filesystems. Synopsis: <code>rubberfs ( ((create|mount|soft-mount|remount|rename|cd|unmount|soft-unmount|attach|check|save|freeze|delta|gc|thaw|patch|status|list|usage-write|destroy|destroy-no-upload|historybak|historypull) [RubberFS name]) | usage | whereami | stub | (stash &lt;file&gt;...) )</code></dd>
    <dt><code>s3-streaming-upload</code></dt><dd>Not ready for production use! Streaming upload to Amazon S3–compatible endpoints, supporting some of the Internet Archive's extensions to S3. Synopsis: <code>s3-streaming-upload &lt;host-name&gt; &lt;collection&gt; &lt;identifier&gt; &lt;remote-file-name&gt; &lt;file-size-estimate&gt; &lt;title&gt; &lt;description&gt; &lt;keywords&gt; [access-key-id] [secret-access-key]</code> (if the access keys are not provided, <code>s3-streaming-upload</code> will attempt to retrieve them from <code>ia</code>'s configuration file)</dd>
    <dt><code>sreg_build_backup_set</code></dt><dd>Make a clone of the "sreg" (<em>s</em>tream <em>reg</em>istry) stream database where the bodies of the streams are stored instead of the pointers. Synopsis: <code>sreg_build_backup_set</code></dd>
    <dt><code>sreg_copy_read</code></dt><dd>Copy the first argument into the second and replace any enclosed sreg pointers with their contents. Synopsis: <code>sreg_copy_read &lt;source-path&gt; &lt;destination-directory&gt;</code></dd>
    <dt><code>sreg_copy_write</code></dt><dd>Copy the first argument into the second and replace enclosed files with sreg pointers. Synopsis: <code>sreg_copy_write &lt;source-path&gt; &lt;destination-directory&gt;</code></dd>
    <dt><code>sreg_fsck</code></dt><dd>Verify that all entries in the sreg stream database can be read correctly. Synopsis: <code>sreg_fsck</code></dd>
    <dt><code>sreg_fsck_hashpointers</code></dt><dd>Verify that all sreg hash pointers in the specified directory can be read correctly. Synopsis: <code>sreg_fsck_hashpointers &lt;path&gt;</code></dd>
    <dt><code>sreg_read_files</code></dt><dd>For each file specified, if it is a sreg pointer, then replace it with the pointer's contents. Synopsis: <code>sreg_read_files &lt;file&gt;...</code></dd>
    <dt><code>sreg_read_stream</code></dt><dd>Accepts a sreg pointer on stdin, and outputs the corresponding data from the stream registry. Synopsis: <code>sreg_read_stream [--disallow-hash-pointer]</code></dd>
    <dt><code>sreg_store_files</code></dt><dd>Store the contents of the specified file(s) in the stream registry, and optionally replace them with their contents. Synopsis: <code>sreg_read_stream [--replace] &lt;file&gt;...</code></dd>
    <dt><code>sreg_store_stream</code></dt><dd>Stores data provided on stdin into the stream registry, and sends a pointer to it to stdout. Synopsis: <code>sreg_store_stream</code></dd>
    <dt><code>sreg_verify_entry</code></dt><dd>Check that the specified pointer can be retrieved. If a tracking file (should contain only an integer) is specified, the file's value will be incremented. Synopsis: <code>sreg_verify_entry &lt;retry-limit&gt; &lt;path-to-pointer&gt; [tracking-file]</code></dd>
    <dt><code>sreg_verify_hashpointer</code></dt><dd>Check that the specified hash pointer can be retrieved (does not currently retry). Synopsis: <code>sreg_verify_hashpointer &lt;retry-limit&gt; &lt;path-to-pointer&gt;</code></dd>
    <dt><code>srpull</code></dt><dd>Copy the first argument into the second and replace any enclosed sreg pointers with their contents (alias for sreg_copy_read). Synopsis: <code>srpull &lt;source-path&gt; &lt;destination-directory&gt;</code></dd>
    <dt><code>srsync</code></dt><dd>Sync the first argument into the second and replace non-pointerized or out-of-date files in the destination with their pointers (similar to sreg_copy_write, but able to update an existing directory). Synopsis: <code>srsync [--no-verify] &lt;source-path&gt; &lt;destination-directory&gt;</code></dd>
    <dt><code>warn</code></dt><dd>Notify the user of a shell script of a warning. Synopsis: <code>warn &lt;message-to-user&gt;</code></dd>
    <dt><code>warn-timeout</code></dt><dd>Notify the user of a shell script of a warning, and wait a bit in the hope that they see the warning. Synopsis: <code>warn &lt;message-to-user&gt; [time-to-wait-in-seconds]</code> (time-to-wait defaults to 10 seconds)</dd>
</dl>
<p>In addition, Crystallize also provides the following scripts that it uses internally that are not supported for independent use.</p>
<dl>
    <dt><code>crystallize-bash_setup</code></dt><dd>Set up the bash environment shared by Crystallize tools. Synopsis: <code>source crystallize-bash_setup</code></dd>
    <dt><code>crystallize-internal-ia</code></dt><dd>Part of <code>crystallize</code> that uploads the data body (not metadata). Synopsis: <code>crystallize-internal-ia</code> (needs specific environment variables set)</dd>
    <dt><code>crystallize-internal-xz-b</code></dt><dd>Part of <code>crystallize</code> that compresses a JSON metadata file. Synopsis: <code>crystallize-internal-xz-b</code> (needs specific environment variables set)</dd>
    <dt><code>crystallize-logsession</code></dt><dd>The main logic for <code>crystallize</code>. Synopsis: <code>crystallize-logsession &lt;crystal-address&gt; &lt;file&gt;...</code> (needs specific environment variables set)</dd>
    <dt><code>ember_bash_setup</code></dt><dd>Set up the bash environment shared by various Ember projects. Synopsis: <code>source ember_bash_setup</code></dd>
    <dt><code>error-die</code></dt><dd>Tells the user that their bash environment is misconfigured (this script should never run if everything is working). Synopsis: <code>error-die</code></dd>
    <dt><code>localstorecache_init</code></dt><dd>Create a "localstorecache" cache directory: localstorecache is a naïve caching layer for LocalStore crystals (variant of "fcache"). Synopsis: <code>localstorecache_init &lt;directory-name&gt; &lt;cache-size-limit-in-bytes&gt;</code> (if the cache directory already exists, the current size limit will override the one provided as an argument)</dd>
    <dt><code>localstorecache_request</code></dt><dd>Get an item (returned as a file path) using the specified "localstorecache" cache. Synopsis: <code>localstorecache_request &lt;cache-directory&gt; &lt;crystal-address&gt;</code></dd>
    <dt><code>sregi_bundle_pointer</code></dt><dd>Given a LocalStore pointer, replace it with a remote pointer. Synopsis: <code>sregi_bundle_pointer &lt;path-to-remote-pointer-data&gt; &lt;path-to-pointer-to-replace&gt;</code></dd>
    <dt><code>sregi_copy_write</code></dt><dd>Copy the first argument (must be a file) to the first argument appended to the destination folder, and replace it with a sreg pointer. If a tracking file (should contain only an integer) is specified, the file's value will be incremented. Synopsis: <code>sregi_copy_write [--no-verify] &lt;path-to-file&gt; &lt;destination-folder&gt; [tracking-file]</code></dd>
    <dt><code>sregi_file_backup</code></dt><dd>Accepts a sreg database entry as an argument, and replaces the entry with the entry's contents (but does nothing if this has already been done). Synopsis: <code>sregi_file_backup &lt;path-to-database-entry&gt;</code></dd>
</dl>

<h3>Installation</h3>
<p>For Wreathe 7.3, an ebuild (<code>app-misc/crystallize</code>) is available in the <a href="/ancillary/wreathe">Wreathe</a> overlay (this may also work for similar operating systems such as Ututo XS GNU/Linux).</p>
<p>For other operating systems, use the following installation instructions.</p>

<h4>Instructions for installation without ebuild</h4>

<h5>Requirements</h5>
<p><span class="hatnote-emphasis-warning"><a href="/ancillary/wreathe">Wreathe</a> 7.3 is required for full support. The simple invocations of the 'crystallize' and 'decrystallize' commands (with filenames as the only arguments) are also supported on Ubuntu GNU/Linux and macOS 10.12 in the interest of promoting the preservation of knowledge (although Ember strongly advises not using non-libre software such as those operating systems), and will probably work on many other UNIX-like operating systems; these instructions only cover that basic support.</span></p>

<ul>
    <li>An account at the non-profit <a href="https://archive.org/">Internet Archive</a></li>
    <li>ia (<a href="https://pypi.python.org/pypi/internetarchive">https://pypi.python.org/pypi/internetarchive</a>) 1.0.2 or later (ia must be configured by running <code>ia configure</code> since installing 1.0.2 or later before Crystallize can be used)</li>
    <li>a root login or administrator/sudo privileges for your local computer, both for installation and use of all tools except quickliquid and dequicklify.</li>
    <li>wget 1.14 or later</li>
    <li>git</li>
    <li>hashdeep</li>
    <li>pv</li>
    <li>sponge (from moreutils)</li>
    <li>A recent version of bash (unless using macOS)</li>
    <li>make</li>
    <li>perl</li>
    <li>rsync</li>
    <li>grep</li>
    <li>at least one of:
        <ul>
            <li>free</li>
            <li>vm_stat</li>
        </ul>
    </li>
</ul>

<p>While using full functionality is not supported without using the ebuild, the following additional requirements are needed for it (this list is probably incomplete/incorrect).</p>
<ul>
    <li>GNU userland (or compatible)</li>
    <li>OpenZFS</li>
</ul>

<h5>Download</h5>
<p>To download Crystallize, run:</p>
<pre><code>git clone https://github.com/ethus3h/crystallize.git</code></pre>

<h5>Copy scripts</h5>
<p>To install the downloaded scripts, run <code>cd crystallize; make</code>.</p>

<h5>Setup</h5>
<p>Edit the configuration file; see <a href="#Configuration_file_format">the "Configuration file format" section</a> for documentation of this.</p>

<p>Finally, run <code>sudo make install</code>.</p>

<h3>Future plans</h3>
<ul>
    <li>Have decrystallize verify checksums.</li>
    <li>Verify that the coal5 file can correctly be expanded to the original files before (or while?) uploading, and before deleting input files.</li>
</ul>

<h2>Configuration file format</h2>
<p>The configuration file is located in your system configuration directory (probably <code>/usr/local/etc</code> or <code>/etc</code>), and is named <code>crystallize.conf</code>. It is a list of key-value pairs in the format <code>Key,Value</code>, separated by a line feed (0x0A), as follows:</p>
<dl>
    <dt>InstallationIdentifier</dt><dd>Installation UUID</dd>
    <dt>Collection</dt><dd>Internet Archive collection identifier (write access to the collection is required)</dd>
    <dt>Passphrase</dt><dd>Passphrase (must be a valid GPG passphrase)</dd>
    <dt>WorkDirectory</dt><dd>Directory for working data (should be writeable and have sufficient free space to hold approximately three times the amount of data being crystallized at any one time)</dd>
    <dt>EmberLibrary</dt><dd>Path to a directory tree of the format used by the <a href="/library/">Ember Library</a></dd>
</dl>
<p>Note that there is currently no facility for storing configuration values containing line feeds.</p>

<h2>Development</h2>
<p>To learn about contributing to this project, visit <a href="../develop.htm">the development page</a>.</p>
