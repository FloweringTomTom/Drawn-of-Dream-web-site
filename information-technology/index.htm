<h1 class="title">Information Technology Environment â€” Ember</h1>

<p class="breadcrumbs">Page location:
    <span><a href="/components.htm">Core project components</a></span>
</p>

<h2>Introduction</h2>
<p>This section documents the Ember computing environment: a centralized append-only information store, a computer operating system integrated with that information store, and related specifications.</p>

<h2>Overview</h2>
<p>The computing environment will consist of the following components:</p>
<ul>
    <li>Development principles, describing the process to use for creating the computing environment</li>
    <li>Data formats: Specifications of the data formats used by the computing environment.</li>
    <li>Client app</li>
    <li>Server apps:
        <ul>
            <li>Public-facing API</li>
            <li>Search engine</li>
            <li>Storage backend</li>
        </ul>
    </li>
</ul>

<h2>Development principles</h2>
<h3>Prerequisites for code to be added to the repository</h3>
<ul>
    <li>Code must be readable and documented.</li>
    <li>Code must not cause or have failing tests.</li>
    <li>Code should include thorough automatic test coverage.</li>
    <li>Code must address a deviation from the current specification (bug, missing feature, <span class="foreign-text">etc.</span>), and may not contain other code.</li>
</ul>
<h3>How issues should be prioritised</h3>
<p>Ordered from highest priority to lowest priority</p>
<ol>
    <li>Incorrect results</li>
    <li>Crashes and similar critical usability issues</li>
    <li>Slow code with a significant impact on usability</li>
    <li>Minor usability issues</li>
    <li>Slow code with a moderate impact on usability</li>
    <li>Regressions and lost features</li>
    <li>Missing features</li>
</ol>

<h2>Data formats</h2>

<h3>Ember Language</h3>
<p>Objective: Develop a machine-readable language that can be source-to-source translated into other languages. C and JavaScript translators should be the current development priorities.</p>
<p>Ember Language programs may optionally declare a non-default language profile to use: Basic, which restricts the program to a core subset of the language, and Dangerous, which includes language features which are probably a bad idea to use, but may be needed in some cases.</p>
<p>Ember Language programs can optionally run in one of three modes: Document, Terminal, and Web; these modes set up a basic environment for the program for running with a graphical raster display output, with a character-based terminal output, and as a Web server, respectively.</p>
<h4>Specification</h4>
<h5>Basic syntax</h5>
<p>Ember Language source files can be in two formats: packed and un-packed; both are ASCII text files.
<h6>Packing format</h6>Logical lines are terminated with 0x3B0A (semicolon + line feed), while continued lines are terminated with 0x5C0A (backslash + line feed). Logical lines continued from the previous line should be indented. Indentation is four spaces.</p>
<pre><code>codeCharacter = ""
packLine = 79 * { codeCharacter }
simpleLine = { packLine }, "0A"
lineStart = packLine, "3B0A"
compoundLine = lineStart, [ { lineContinuation } ], lineEnd
line = simpleLine | compoundLine
file = "23212F62696E2F456D6265724C616E67756167655061636B65640A", { line }</code></pre>
<h5>Functions</h5>
<h6>
